#!/bin/bash

# This nested command will extract the base directory where this script
# is located, wherever the current directory is.

readarray -t FILES < <(find . -maxdepth 1 -type f -printf '%P\n')
TOTAL="${#FILES[@]}"
COUNT=0
LASTPERCENT=0

printf %s\\n "Starting up, found $TOTAL emails" >&2

# Run through all files in the current dir
for i in "${FILES[@]}"
do
	# Work out progress and display
	COUNT=$((COUNT+1))
	PERCENT=$((COUNT*100/TOTAL))
	if [ ${PERCENT} -gt ${LASTPERCENT} ]; then
		LASTPERCENT=${PERCENT}
		printf "\rConverting: %i%% done" "$PERCENT" >&2
	fi

	# Parse the email file
	while read -r line
	do
		# Ignore anything after the header
		if [ "a${line}" == "a" ]; then break; fi

		# Catch the From email address
		if [ 'From:' = "${line:0:5}" ]; then
			MAILADDR="${line#From: *<}"
			MAILADDR="${MAILADDR%>*}"
		fi

		# Catch the Date
		if [ 'Date:' = "${line:0:5}" ]; then
			# Convert the date
			DATE=$(perl -we '
				use strict;
				eval {
					require DateTime::Format::Mail;
					print DateTime::Format::Mail->new->loose->parse_datetime($ARGV[0])->strftime("%a %b %e %T %Y");
				};
				if($@){
					$ARGV[0]=~/(Sun|Mon|Tue|Wed|Thu|Fri|Sat),? *([ 0-3][0-9]) *(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) *([0-9]{4}) *([ 0-2][0-9]:[0-5][0-9]:[0-5][0-9])/ or die;
					print "$1 $3 $2 $5 $4";
				}
			' "${line#Date: }"||date --date="${line#Date: }" +'%a %b %e %T %Y')||{
				DATE='Mon Jan  1 00:00:00 1900'
				NOTE="Note: Original date of email unreadable: ${line#Date: }"
			}
		fi

	done < <(perl -p0e 's/\n[\t ]+/ /g' < "$i")

	# Output in mbox format
	printf %s\\n "From ${MAILADDR}  ${DATE}"
	cat "$i"
	[ '' = "$NOTE" ]||{
		printf %s\\n "$NOTE"
		NOTE=''
	}
	printf \\n
	printf '\rConverted %10s\n' "$i" >&2
done

printf "\nFinished.\n" >&2
